blogdown:::preview_site()
blogdown::build_site()
blogdown::serve_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
xaringan::infinite_moon_reader()
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
#Datos
data.pvalues<-read_csv("./data_benjamini_hochberg.csv",
locale = locale(encoding = "latin1"))
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
#Datos
data.pvalues<-read_csv(".laboratorios/data_benjamini_hochberg.csv",
locale = locale(encoding = "latin1"))
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
#Datos
data.pvalues<-read_csv("./laboratorios/data_benjamini_hochberg.csv",
locale = locale(encoding = "latin1"))
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
#Datos
data.pvalues<-read_csv("./content/laboratorios/data_benjamini_hochberg.csv",
locale = locale(encoding = "latin1"))
n <- 15
alpha <- 0.05
data.pvalues
View(data.pvalues)
View(data.pvalues)
p_al_menos_1error <- 1-(1-alpha)^m
m <- 1:100
p_al_menos_1error <- 1-(1-alpha)^m
plot(p_al_menos_1error)
knitr::opts_chunk$set(echo = FALSE, fig.path = "figures/")
library(tidyverse)
library(janitor)
library(sandwich)
#library(nnet)
#library(mlogit)
library(readr)
library(clubSandwich)
library(modelsummary)
library(estimatr)
xfun::pkg_load2(c('base64enc', 'htmltools', 'mime'))
alpha=0.05
n <- 1:1000
p <- 1-(1-alpha)^n
plot(p,n, xlab="n", ylab="1-(1-alpha)^n")
alpha=0.05
n <- 1:100
p <- 1-(1-alpha)^n
plot(p,n, xlab="n", ylab="1-(1-alpha)^n")
alpha <- 0.05
n <- 1:100
p <- 1-(1-alpha)^n
plot(p,n, xlab="n", ylab="1-(1-alpha)^n")
#Datos
data.pvalues<-read_csv("./content/laboratorios/data_benjamini_hochberg.csv",
locale = locale(encoding = "latin1"))
m <- 15
alpha <- 0.05
data.pvalues
#Bonferroni----
data.bonferroni <- data.pvalues %>%
mutate(bonferroni_alpha=alpha/m) %>%
mutate(bonferrini_rechazar=ifelse(poriginal<=bonferroni_alpha,1,0))
#Benjamini-Hochberg----
data.bh <- data.pvalues %>%
mutate(bh_alpha=alpha*hipotesis/m) %>%
mutate(bh_rechazar=ifelse(poriginal<=bh_alpha,1,0))
View(data.bh)
View(data.bh)
alpha <- 0.05
m <- 1:100
p <- 1-(1-alpha)^m
plot(p,m, xlab="n", ylab="1-(1-alpha)^m")
alpha <- 0.05
m <- 1:100
p <- 1-(1-alpha)^m
plot(p,m, xlab="n", ylab="1-(1-alpha)^m")
alpha <- 0.05
m <- 1:100
p <- 1-(1-alpha)^m
plot(p,m, xlab="n", ylab="1-(1-alpha)^m")
alpha <- 0.05
m <- 1:100
p <- 1-(1-alpha)^m
plot(m,p, xlab="n", ylab="1-(1-alpha)^m")
xaringan::infinite_moon_reader()
?vcov
?vcovCR
install.packages(ggbrace)
devtools::install_github("nicolash2/ggbrace")
install.packages('devtools')
devtools::install_github("nicolash2/ggbrace")
blogdown:::preview_site()
blogdown:::preview_site()
knitr::opts_chunk$set(collapse = TRUE)
library(tidyverse)
library(janitor)
library(sandwich)
library(readr)
library(clubSandwich)
library(modelsummary)
library(estimatr)
library(lubridate)
library(ExPanDaR) #for describing panel data
library(lfe)
library(ggbrace)
knitr::include_graphics("./banks_map.png")
banks<-read_csv("./banks_mm.csv",
locale = locale(encoding = "latin1"))
banks <- banks %>%
filter(month(date) == 7L,
mday(date) == 1L) %>%
mutate(year = year(date)) %>%
select(year,
matches("bi[ob][68]")) %>%
select(year,bib6,bib8) %>%
gather(distrito,banks,bib6:bib8) %>%
mutate(treatment=ifelse(distrito=="bib6",1,0)) %>%
mutate(post=ifelse(year>=1931,1,0))
banks %>%
mutate(banks=ifelse(year==1930 | year==1931,banks,NA)) %>%
filter(year <= 1932) %>%
ggplot(aes(x=year, y=banks, color=distrito)) +
geom_line(size=2) +
scale_y_continuous(limits=c(100,180))
banks_contrafactual <- banks %>%
mutate(banks=ifelse(year==1930 | year==1931,banks,NA)) %>%
filter(year <= 1932) %>%
mutate(tipo="observado")
d6_contrafactual <- banks_contrafactual %>%
filter(distrito=="bib6") %>%
mutate(banks=ifelse(year==1931,102,banks),
tipo="contrafactual")
banks_contrafactual <- rbind(banks_contrafactual,d6_contrafactual)
banks_contrafactual %>%
ggplot(aes(x=year, y=banks, color=distrito, linetype=tipo))+
geom_line(size=2) +
scale_linetype_manual(values=c("dashed", "solid")) +
scale_y_continuous(limits=c(100,180))+
geom_brace(aes(c(1931.1,1931.3), c(121,102), label="Efecto del\ntratamiento"), inherit.data=F, labelsize=3, rotate = 90)
summary(lm(banks ~ treatment + post+ treatment*post,
data=banks))
summary(lm(banks ~ treatment + post+ treatment*post,
data=filter(banks,year==1930 | year==1931)))
summary(lm(banks ~ treatment + post+ treatment*post,
data=banks))
View(banks)
View(banks)
?lfe
install.packages('plm')
library(plm)
?plm
summary(plm(inv~treatment,
index = c("distrito","year"),
data = banks,
model = "within"))
summary(plm(banks ~ treatment,
index = c("distrito","year"),
data = banks,
model = "within"))
summary(plm(banks ~ treatment,
index = c("distrito","year"),
data = banks,
model = "within"))
plm(banks ~ treatment,
index = c("distrito","year"),
data = banks,
model = "within")
summary(plm(bbanks$banks ~ treatment,
index = c("distrito","year"),
data = banks,
model = "within"))
summary(plm(banks$banks ~ treatment,
index = c("distrito","year"),
data = banks,
model = "within"))
summary(plm(banks ~ treatment,
index = c("distrito","year"),
data = banks,
model = "within"))
summary(plm(formula = banks ~ treatment,
index = c("distrito","year"),
data = banks,
model = "within"))
summary(plm(formula = banks ~ treatment,
data = banks,
model = "within"))
summary(plm(formula = banks ~ treatment,
data = banks,
model = "within",
index = c("distrito","year")))
summary(plm(formula = banks ~ treatment,
data = banks,
model = "within",
index = c("year","distrito")))
summary(plm(formula = banks ~ 1+  treatment,
data = banks,
model = "within",
index = c("year","distrito")))
summary(plm(formula = banks ~  treatment*post,
data = banks,
model = "within",
index = c("year","distrito")))
summary(plm(formula = banks ~  treatment*post,
data = banks,
model = "within",
index = c("distrito","year")))
summary(plm(formula = banks ~ 1 + treatment*post,
data = banks,
model = "within",
index = c("distrito","year")))
blogdown:::preview_site()
banks<-read_csv("./banks_mm.csv",
locale = locale(encoding = "latin1"))
knitr::opts_chunk$set(collapse = TRUE)
library(tidyverse)
library(janitor)
library(sandwich)
library(readr)
library(clubSandwich)
library(modelsummary)
library(estimatr)
library(lubridate)
library(ExPanDaR) #for describing panel data
library(plm)
library(ggbrace)
library(knitr)
banks<-read_csv("./banks_mm.csv",
locale = locale(encoding = "latin1"))
banks <- banks %>%
filter(month(date) == 7L,
mday(date) == 1L) %>%
mutate(year = year(date)) %>%
select(year,
matches("bi[ob][68]")) %>%
select(year,bib6,bib8) %>%
gather(distrito,banks,bib6:bib8) %>%
mutate(treatment=ifelse(distrito=="bib6",1,0)) %>%
mutate(post=ifelse(year>=1931,1,0))
banks %>%
mutate(banks=ifelse(year==1930 | year==1931,banks,NA)) %>%
filter(year <= 1932) %>%
ggplot(aes(x=year, y=banks, color=distrito)) +
geom_line(size=2) +
scale_y_continuous(limits=c(100,180))
View(banks)
View(banks)
blogdown:::preview_site()
blogdown:::preview_site()
knitr::opts_chunk$set(collapse = TRUE)
library(tidyverse)
library(janitor)
library(sandwich)
#library(nnet)
#library(mlogit)
library(readr)
library(clubSandwich)
library(modelsummary)
library(estimatr)
library(lubridate)
library(ExPanDaR) #for describing panel data
library(lfe)
modelo1 <- felm(div_rate ~unilateral | st + year+divx,
data = wolfers.data,
weights = wolfers.data$stpop)
knitr::opts_chunk$set(collapse = TRUE)
library(tidyverse)
library(janitor)
library(sandwich)
#library(nnet)
#library(mlogit)
library(readr)
library(clubSandwich)
library(modelsummary)
library(estimatr)
library(lubridate)
library(ExPanDaR) #for describing panel data
library(lfe)
wolfers.data <-read_csv("wolfers_divorce.csv",
locale = locale(encoding = "latin1")) %>%
select(div_rate, unilateral, st, year, stpop, divx)  %>%
filter(year>1967 & year<1989)
#Esta es una de las funciones de ExPanDaR
panel_missing <- prepare_missing_values_graph(wolfers.data, ts_id = "year")
panel_missing
modelo1 <- felm(div_rate ~unilateral | st + year+divx,
data = wolfers.data,
weights = wolfers.data$stpop)
summary(modelo1)
modelo1 <- felm(div_rate ~unilateral | st + year,
data = wolfers.data,
weights = wolfers.data$stpop)
summary(modelo1)
modelo2 <- felm(div_rate ~unilateral | factor(st) + factor(year) + factor(st):year,
data = wolfers.data,
weights = wolfers.data$stpop)
summary(modelo2)
install.packages('bacondecomp')
View(wolfers.data)
View(wolfers.data)
library(bacondecomp)
df_bacon <- bacon(l_homicide ~ post,
data = bacondecomp::castle,
id_var = "state",
time_var = "year")
d <- data = bacondecomp::castle
d <- bacondecomp::castle
View(d)
View(d)
#>                       type  weight  avg_est
#> 1 Earlier vs Later Treated 0.05976 -0.00554
#> 2 Later vs Earlier Treated 0.03190  0.07032
#> 3     Treated vs Untreated 0.90834  0.08796
coef_bacon <- sum(df_bacon$estimate * df_bacon$weight)
print(paste("Weighted sum of decomposition =", round(coef_bacon, 4)))
fit_tw <- lm(l_homicide ~ post + factor(state) + factor(year),
data = bacondecomp::castle)
print(paste("Two-way FE estimate =", round(fit_tw$coefficients[2], 4)))
df_bacon <- bacon(div_rate ~ unilateral,
data = wolfers.data,
id_var = "st",
time_var = "year")
table(wolfers.data$st, exclude = N)
table(wolfers.data$st, exclude = F)
table(wolfers.data$st, exclude = T)
View(d)
View(d)
df_bacon <- bacon(div_rate ~ unilateral,
data = wolfers.data,
id_var = "st",
time_var = "year")
?bacon
df_bacon <- bacon(div_rate ~ unilateral,
data = wolfers.data,
id_var = st,
time_var = year)
View(d)
View(d)
View(d)
df_bacon <- bacon(div_rate ~ unilateral,
data = wolfers.data,
id_var = "st",
time_var = "year")
wolfers.data %>% wolfers.data %>%
mutate(mrate = ifelse(is.na(div_rate),1,0)) %>%
group_by(st) %>%
mutate(num_mrate=sum(mrate)) %>%
ungroup()
wolfers.data <- wolfers.data %>%
mutate(mrate = ifelse(is.na(div_rate),1,0)) %>%
group_by(st) %>%
mutate(num_mrate=sum(mrate)) %>%
ungroup()
df_bacon <- bacon(div_rate ~ unilateral,
data = filter(wolfers.data, num_mrate!=0),
id_var = "st",
time_var = "year")
df_bacon <- bacon(div_rate ~ unilateral,
data = filter(wolfers.data,
id_var = "st",
time_var = "year")
df_bacon <- bacon(div_rate ~ unilateral,
data = filter(wolfers.data,
id_var = "st",
time_var = "year")
df_bacon <- bacon(div_rate ~ unilateral,
df_bacon <- bacon(div_rate ~ unilateral,
data = filter(wolfers.data, num_mrate!=0),
id_var = "st",
time_var = "year")
df_bacon <- bacon(div_rate ~ unilateral,
data = wolfers.data,
id_var = "st",
time_var = "year")
df_bacon <- bacon(div_rate ~ unilateral,
data = filter(wolfers.data, num_mrate==0),
id_var = "st",
time_var = "year")
coef_bacon <- sum(df_bacon$estimate * df_bacon$weight)
print(paste("Weighted sum of decomposition =", round(coef_bacon, 4)))
fit_tw <- lm(div_rate ~ unilateral + factor(st) + factor(year),
data = filter(wolfers.data, num_mrate==0)
print(paste("Two-way FE estimate =", round(fit_tw$coefficients[2], 4)))
coef_bacon <- sum(df_bacon$estimate * df_bacon$weight)
print(paste("Weighted sum of decomposition =", round(coef_bacon, 4)))
fit_tw <- lm(div_rate ~ unilateral + factor(st) + factor(year),
data = filter(wolfers.data, num_mrate==0))
print(paste("Two-way FE estimate =", round(fit_tw$coefficients[2], 4)))
summary(felm(div_rate ~unilateral |
factor(st)+factor(year)+year:factor(st) |
0 |
st,
data = wolfers.data,
weights = wolfers.data$stpop))
summary(felm(div_rate ~unilateral |
factor(st)+factor(year)) |
0 |
st,
data = wolfers.data,
weights = wolfers.data$stpop))
#Using Wolfers specification
summary(felm(div_rate ~unilateral |
factor(st)+factor(year) |
0 |
st,
data = wolfers.data,
weights = wolfers.data$stpop))
#Using Wolfers specification
summary(felm(div_rate ~unilateral |
factor(st)+factor(year) |
0 |
st,
data = wolfers.data))
#Using Wolfers specification
summary(felm(div_rate ~unilateral |
factor(st)+factor(year) |
0 |
st,
data = filter(wolfers.data, num_mrate==0)))
#Using Wolfers specification
summary(felm(div_rate ~unilateral |
factor(st)+factor(year) |
0 |
st,
data = filter(wolfers.data, num_mrate==0),
weights = wolfers.data$stpop))
df_bacon <- bacon(div_rate ~ unilateral + stpop,
data = filter(wolfers.data, num_mrate==0),
id_var = "st",
time_var = "year")
coef_bacon <- sum(df_bacon$estimate * df_bacon$weight)
print(paste("Weighted sum of decomposition =", round(coef_bacon, 4)))
fit_tw <- lm(div_rate ~ unilateral + factor(st) + factor(year),
data = filter(wolfers.data, num_mrate==0))
print(paste("Two-way FE estimate =", round(fit_tw$coefficients[2], 4)))
coef_bacon <- sum(df_bacon$estimate * df_bacon$weight)
fit_tw <- lm(div_rate ~ unilateral + factor(st) + factor(year) + stpop,
data = filter(wolfers.data, num_mrate==0))
print(paste("Two-way FE estimate =", round(fit_tw$coefficients[2], 4)))
coef_bacon <- sum(df_bacon$estimate * df_bacon$weight)
print(paste("Weighted sum of decomposition =", round(coef_bacon, 4)))
summary(fit_tw)
print(paste("Two-way FE estimate =", round(fit_tw$coefficients[2], 4)))
df_bacon <- bacon(div_rate ~ unilateral + stpop,
data = filter(wolfers.data, num_mrate==0),
id_var = "st",
time_var = "year")
coef_bacon <- sum(df_bacon$estimate * df_bacon$weight)
print(paste("Weighted sum of decomposition =", round(coef_bacon, 4)))
#Using Wolfers specification
summary(felm(div_rate ~unilateral |
factor(st)+factor(year) |
0 |
st,
filter(wolfers.data, num_mrate==0)))
df_bacon <- bacon(div_rate ~ unilateral,
data = filter(wolfers.data, num_mrate==0),
id_var = "st",
time_var = "year")
coef_bacon <- sum(df_bacon$estimate * df_bacon$weight)
print(paste("Weighted sum of decomposition =", round(coef_bacon, 4)))
fit_tw <- lm(div_rate ~ unilateral + factor(st) + factor(year),
data = filter(wolfers.data, num_mrate==0))
print(paste("Two-way FE estimate =", round(fit_tw$coefficients[2], 4)))
?sunab
??sunab
install.packages('felm')
install.packages('fixest')
??felm
blogdown::build_site()
xaringan::infinite_moon_reader()
??iplot
iplot(modeloSA)
modeloSA %>%
iplot(main = "fixest::sunab",
xlab = "Periodos desde el tratamiento",
ref.line = 1)
iplot(modeloSA)
modeloSA %>%
iplot(main = "fixest::sunab",
xlab = "Periodos desde el tratamiento",
ref.line = 1)
modeloSA %>%
iplot(main = "fixest::sunab",
xlab = "Periodos desde el tratamiento",
ref.line = 1)
#Gráfico (iplot está incluido en fixest)
iplot(modeloSA)
blogdown::build_site()
xaringan::infinite_moon_reader()
blogdown::stop_server()
xaringan::infinite_moon_reader()
blogdown::build_site()
xaringan::infinite_moon_reader()
blogdown::build_site()
blogdown:::preview_site()
