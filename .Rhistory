install.packages('stargazer')
library(stargazer)
# Stargazer output (with and without RSE)
stargazer(reg0,
type = "text",
se = list(NULL))
?stargazer
# Stargazer output (with and without RSE)
stargazer(reg0,
type = "text",
se = list(NULL),
column.labels = "Clásicos",
keep = c(ssp, sfp, sfsp))
# Stargazer output (with and without RSE)
stargazer(reg0,
type = "text",
se = list(NULL),
column.labels = "Clásicos",
keep = c("ssp", "sfp", "sfsp"))
cov0       <- vcovHC(model, type = "HC0")
#Comparamos errores con robustos
cov0       <- vcovHC(reg, type = "HC0")
robse0    <- sqrt(diag(cov0))
#Comparamos errores con robustos
cov0       <- vcovHC(reg0, type = "HC0")
robse0    <- sqrt(diag(cov0))
stargazer(reg0, reg0,
type = "text",
se = list(NULL, robse0),
column.labels =c("Clásicos", "White"),
keep = c("ssp", "sfp", "sfsp"))
?vcovHC
reg <- lm(gpa_year1 ~ ssp + sfp+ sfsp+
factor(sex)+
factor(mtongue)+ factor(hsgroup)+factor(numcourses_nov1)+
factor(lastmin)+
factor(mom_edn)+
factor(dad_edn),
data=data.angrist)
summary(reg)$coef[1:4,]
#Uso stargazer para presentar resultados (hay otras maneras)
stargazer(reg,
type = "text",
se = list(NULL),
column.labels = "Clásicos",
keep = c("ssp", "sfp", "sfsp"))
cov0       <- vcovHC(reg, type = "HC0")
robse0    <- sqrt(diag(cov0))
cov3      <- vcovHC(reg, type = "HC3")
robse3    <- sqrt(diag(cov3))
stargazer(reg, reg,
type = "text",
se = list(NULL, robse0),
column.labels =c("Clásicos", "White"),
keep = c("ssp", "sfp", "sfsp"))
stargazer(reg, reg, reg,
type = "text",
se = list(NULL, robse0, robse3),
column.labels =c("Clásicos", "White", "HC3"),
keep = c("ssp", "sfp", "sfsp"))
cov3      <- vcovHC(reg, type = "HC3")
robse3    <- sqrt(diag(cov3))
stargazer(reg, reg, reg,
type = "text",
se = list(NULL, robse0, robse3),
column.labels =c("Clásicos", "White", "HC3"),
keep = c("ssp", "sfp", "sfsp"))
View(data.angrist)
View(data.angrist)
View(data.angrist)
View(data.angrist)
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp+ sfsp+
data=data.angrist)
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp+ sfsp,
data=filter(data.angrist,noshow==0))
summary(reg)
table(data.angrist$age)
table(data.angrist$female)
reg <- lm(gpa_year1 ~ ssp + sfp+ sfsp + age + female + mtongue + gpa0,
data=filter(data.angrist,noshow==0))
summary(reg)
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp+ sfsp + age + female + mtongue + gpa0,
data=filter(data.angrist))
summary(reg)
reg <- lm(gpa_year1 ~ ssp + sfp+ sfsp +
factor(sex)+
factor(mtongue)+ factor(hsgroup)+factor(numcourses_nov1)+
factor(lastmin)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist))
summary(reg)
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp+ sfsp +
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp+ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
data=filter(data.angrist))
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp sfsp +
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp sfsp +
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp sfsp +
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp sfsp +
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp sfsp +
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp + sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ ssp + sfp+ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(numcourses_nov1)+
factor(lastmin)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ ssp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(numcourses_nov1)+
factor(lastmin)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(numcourses_nov1)+
factor(lastmin)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Usemos por ahora un solo tratamiento, sfsp
data.angrist.table1 <- data.angrist %>%
select(noshow,age,female, mtongue, gpa0, sfsp) %>%
mutate(mtongue=ifelse(mtongue=="English",1,0)) %>%
mutate(ssp=factor(ssp,levels=c(0,1),
labels=c("Control","SFSP")))
#Usemos por ahora un solo tratamiento, sfsp
data.angrist.table1 <- data.angrist %>%
select(noshow,age,female, mtongue, gpa0, sfsp) %>%
mutate(mtongue=ifelse(mtongue=="English",1,0)) %>%
mutate(ssp=factor(ssp,levels=c(0,1),
labels=c("Control","SFSP")))
data.angrist <- read_csv("C:/Users/rojas/Dropbox/curso_EPS/eps-2022/content/diapositivas/STAR_public_use.csv",
locale = locale(encoding = "latin1"))   %>%
clean_names()
#Usemos por ahora un solo tratamiento, sfsp
data.angrist.table1 <- data.angrist %>%
select(noshow,age,female, mtongue, gpa0, sfsp) %>%
mutate(mtongue=ifelse(mtongue=="English",1,0)) %>%
mutate(ssp=factor(ssp,levels=c(0,1),
labels=c("Control","SFSP")))
#Usemos por ahora un solo tratamiento, sfsp
data.angrist.table1 <- data.angrist %>%
select(noshow,age,female, mtongue, gpa0, sfsp) %>%
mutate(mtongue=ifelse(mtongue=="English",1,0)) %>%
mutate(ssp=factor(sfsp,levels=c(0,1),
labels=c("Control","SFSP")))
#Pedimos estadísticas por grupo
data.angrist.table1 %>%
filter(noshow==0) %>%
group_by(sfsp) %>%
summarize(mean=mean(age),
std=sd(age), n=n()) %>%
ungroup()
#Prueba t
t.test(data=filter(data.angrist.table1,noshow==0),age ~ sfsp)
#Prueba t como una regresión
dif_age <- lm(age ~ sfsp, data=filter(data.angrist.table1,noshow==0))
summary(dif_age)
#¿Las x predicen tratamiento?
predict_t <- lm(as.numeric(sfsp) ~ age + female + mtongue + gpa0, data=filter(data.angrist.table1,noshow==0) )
summary(predict_t)
#Una forma muy rápida con modelsummary ----
datasummary(noshow+age+female~ sfsp*(mean + sd)*Arguments(na.rm=TRUE),
fmt = "%.2f",
data = data.angrist.table1,
title = "Pruebas de balance",
notes = "Fuente: Angrist, Lang & Oreopoulos (2009)")
#Una forma muy rápida con modelsummary ----
datasummary(noshow+age+female~ sfsp*(mean + sd)*Arguments(na.rm=TRUE),
fmt = "%.2f",
data = data.angrist.table1,
title = "Pruebas de balance",
notes = "Fuente: Angrist, Lang & Oreopoulos (2009)")
data.angrist <- read_csv("C:/Users/rojas/Dropbox/curso_EPS/eps-2022/content/diapositivas/STAR_public_use.csv",
locale = locale(encoding = "latin1"))   %>%
clean_names()
#Usemos por ahora un solo tratamiento, sfsp
data.angrist.table1 <- data.angrist %>%
select(noshow,age,female, mtongue, gpa0, sfsp) %>%
mutate(mtongue=ifelse(mtongue=="English",1,0)) %>%
mutate(ssp=factor(sfsp,levels=c(0,1),
labels=c("Control","SFSP")))
#Pedimos estadísticas por grupo
data.angrist.table1 %>%
filter(noshow==0) %>%
group_by(sfsp) %>%
summarize(mean=mean(age),
std=sd(age), n=n()) %>%
ungroup()
#Una forma muy rápida con modelsummary ----
datasummary(noshow+age+female~ sfsp*(mean + sd)*Arguments(na.rm=TRUE),
fmt = "%.2f",
data = data.angrist.table1,
title = "Pruebas de balance",
notes = "Fuente: Angrist, Lang & Oreopoulos (2009)")
datasummary_balance(~ssp,
fmt = "%.2f",
data = data.angrist.table1,
title = "Pruebas de balance",
notes = "Fuente: Angrist, Lang & Oreopoulos (2009)")
#Una forma muy rápida con modelsummary ----
datasummary(noshow+age+female~ sfsp*(mean + sd)*Arguments(na.rm=TRUE),
fmt = "%.2f",
data = data.angrist.table1,
title = "Pruebas de balance",
notes = "Fuente: Angrist, Lang & Oreopoulos (2009)")
#Una forma muy rápida con modelsummary ----
datasummary(age+female~ sfsp*(mean + sd)*Arguments(na.rm=TRUE),
fmt = "%.2f",
data = data.angrist.table1,
title = "Pruebas de balance",
notes = "Fuente: Angrist, Lang & Oreopoulos (2009)")
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(numcourses_nov1)+
factor(lastmin)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp,
data=filter(data.angrist))
summary(reg)$coef[1:4,]
summary(reg)
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
table(data.angrist$hsgroup)
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(hsgroup),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Una forma muy rápida con modelsummary ----
datasummary(noshow+age+female~ sfsp*(mean + sd)*Arguments(na.rm=TRUE),
fmt = "%.2f",
data = data.angrist.table1,
title = "Pruebas de balance",
notes = "Fuente: Angrist, Lang & Oreopoulos (2009)")
data.angrist <- read_csv("C:/Users/rojas/Dropbox/curso_EPS/eps-2022/content/diapositivas/STAR_public_use.csv",
locale = locale(encoding = "latin1"))   %>%
clean_names()
#Usemos por ahora un solo tratamiento, sfsp
data.angrist.table1 <- data.angrist %>%
select(noshow,age,female, mtongue, gpa0, sfsp) %>%
mutate(mtongue=ifelse(mtongue=="English",1,0)) %>%
mutate(sfsp=factor(sfsp,levels=c(0,1),
labels=c("Control","SFSP")))
#Pedimos estadísticas por grupo
data.angrist.table1 %>%
filter(noshow==0) %>%
group_by(sfsp) %>%
summarize(mean=mean(age),
std=sd(age), n=n()) %>%
ungroup()
#Prueba t
t.test(data=filter(data.angrist.table1,noshow==0),age ~ sfsp)
#Prueba t como una regresión
dif_age <- lm(age ~ sfsp, data=filter(data.angrist.table1,noshow==0))
summary(dif_age)
#¿Las x predicen tratamiento?
predict_t <- lm(as.numeric(sfsp) ~ age + female + mtongue + gpa0, data=filter(data.angrist.table1,noshow==0) )
summary(predict_t)
#Una forma muy rápida con modelsummary ----
datasummary(noshow+age+female~ sfsp*(mean + sd)*Arguments(na.rm=TRUE),
fmt = "%.2f",
data = data.angrist.table1,
title = "Pruebas de balance",
notes = "Fuente: Angrist, Lang & Oreopoulos (2009)")
datasummary_balance(~sfsp,
fmt = "%.2f",
data = data.angrist.table1,
title = "Pruebas de balance",
notes = "Fuente: Angrist, Lang & Oreopoulos (2009)")
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(numcourses_nov1)+
factor(lastmin)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
summary(reg)
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(numcourses_nov1)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue)+
factor(numcourses_nov1)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(numcourses_nov1),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(numcourses_nov1)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(numcourses_nov1)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist, noshow==0))
summary(reg)$coef[1:4,]
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist, noshow==0))
summary(reg)$coef[1:4,]
summary(reg)
summary(reg)$coef[1:2,]
#Uso stargazer para presentar resultados (hay otras maneras)
stargazer(reg,
type = "text",
se = list(NULL),
column.labels = "Clásicos",
keep = c("ssp", "sfp", "sfsp"))
#Comparamos errores con robustos
cov0       <- vcovHC(reg, type = "HC0")
robse0    <- sqrt(diag(cov0))
stargazer(reg, reg,
type = "text",
se = list(NULL, robse0),
column.labels =c("Clásicos", "White"),
keep = c("ssp", "sfp", "sfsp"))
#Ahora errores HC3 (corrección por influencia), el default
cov3      <- vcovHC(reg)
robse3    <- sqrt(diag(cov3))
stargazer(reg, reg, reg,
type = "text",
se = list(NULL, robse0, robse3),
column.labels =c("Clásicos", "White", "HC3"),
keep = c("ssp", "sfp", "sfsp"))
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
library(janitor)
library(sandwich)
library(clubSandwich)
library(modelsummary)
library(stargazer)
#Usamos los datos de Angrist et al. en la Tarea 1----
#Noten que aquí solo analizaremos UN tratamiento
#Por tanto, los números que generemos no serán iguales
#a los reportados en el artículo
data.angrist <- read_csv("./content/diapositivas/STAR_public_use.csv",
locale = locale(encoding = "latin1"))   %>%
clean_names()
#Usemos por ahora un solo tratamiento, sfsp
data.angrist.table1 <- data.angrist %>%
select(noshow,age,female, mtongue, gpa0, sfsp) %>%
mutate(mtongue=ifelse(mtongue=="English",1,0)) %>%
mutate(sfsp=factor(sfsp,levels=c(0,1),
labels=c("Control","SFSP")))
#Pedimos estadísticas por grupo
data.angrist.table1 %>%
filter(noshow==0) %>%
group_by(sfsp) %>%
summarize(mean=mean(age),
std=sd(age), n=n()) %>%
ungroup()
#Prueba t
t.test(data=filter(data.angrist.table1,noshow==0),age ~ sfsp)
#Prueba t como una regresión
dif_age <- lm(age ~ sfsp, data=filter(data.angrist.table1,noshow==0))
summary(dif_age)
#¿Las x predicen tratamiento?
predict_t <- lm(as.numeric(sfsp) ~ age + female + mtongue + gpa0, data=filter(data.angrist.table1,noshow==0) )
summary(predict_t)
#Una forma muy rápida con modelsummary ----
datasummary(noshow+age+female~ sfsp*(mean + sd)*Arguments(na.rm=TRUE),
fmt = "%.2f",
data = data.angrist.table1,
title = "Pruebas de balance",
notes = "Fuente: Angrist, Lang & Oreopoulos (2009)")
datasummary_balance(~sfsp,
fmt = "%.2f",
data = data.angrist.table1,
title = "Pruebas de balance",
notes = "Fuente: Angrist, Lang & Oreopoulos (2009)")
#Errores estándar
reg <- lm(gpa_year1 ~ sfsp +
factor(sex)+
factor(mtongue)+
factor(hsgroup)+
factor(mom_edn)+
factor(dad_edn),
data=filter(data.angrist, noshow==0))
summary(reg)$coef[1:2,]
#Uso stargazer para presentar resultados (hay otras maneras)
stargazer(reg,
type = "text",
se = list(NULL),
column.labels = "Clásicos",
keep = c("ssp", "sfp", "sfsp"))
#Comparamos errores con robustos
cov0       <- vcovHC(reg, type = "HC0")
robse0    <- sqrt(diag(cov0))
stargazer(reg, reg,
type = "text",
se = list(NULL, robse0),
column.labels =c("Clásicos", "White"),
keep = c("ssp", "sfp", "sfsp"))
#Ahora errores HC3 (corrección por influencia), el default
cov3      <- vcovHC(reg)
robse3    <- sqrt(diag(cov3))
stargazer(reg, reg, reg,
type = "text",
se = list(NULL, robse0, robse3),
column.labels =c("Clásicos", "White", "HC3"),
keep = c("ssp", "sfp", "sfsp"))
blogdown:::preview_site()
xaringan::infinite_moon_reader()
blogdown::stop_server()
xaringan::infinite_moon_reader()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
