#Esto es lo más cercano que he llegado de lo que producen los autores
coef_test(dif_members,
vcov = "CR3",
cluster = data.morocco$demi_paire,
test = "naive-t")[1:2,]
?vcov
#Esto es lo más cercano que he llegado de lo que producen los autores
coef_test(dif_members,
vcov = "CR1",
cluster = data.morocco$demi_paire)[1:2,]
#Esto es lo más cercano que he llegado de lo que producen los autores
coef_test(dif_members,
vcov = "CR0",
cluster = data.morocco$demi_paire)[1:2,]
#Esto es lo más cercano que he llegado de lo que producen los autores
coef_test(dif_members,
vcov = "CR2",
cluster = data.morocco$demi_paire)[1:2,]
#Esto es lo más cercano que he llegado de lo que producen los autores
coef_test(dif_members,
vcov = "CR3",
cluster = data.morocco$demi_paire)[1:2,]
?coef_test
#Esto es lo más cercano que he llegado de lo que producen los autores
coef_test(dif_members,
vcov = "CR1S",
cluster = data.morocco$demi_paire)[1:2,]
coef_test(dif_members,
vcov = "CR0",
cluster = data.morocco$demi_paire)[1:2,]
dif_members_client <- lm(members_resid_bl ~ client + factor(paire), data=data.morocco)
coef_test(dif_members_client,
vcov = "CR1",
cluster = data.morocco$demi_paire,
test = "naive-t")[1:2,]
#¿El número de actividades es independiente de ser cliente?
dif_activities_client <- lm(act_number_bl ~ client + factor(paire), data=data.morocco)
coef_test(dif_activities_client,
vcov = "CR1",
cluster = data.morocco$demi_paire,
test = "naive-t")[1:2,]
data.morocco %>%
group_by(treatment) %>%
summarize(mean=mean(members_resid_bl),
std=sd(members_resid_bl), n=n()) %>%
ungroup()
#Con una regresión:
dif_members <- lm(members_resid_bl ~ treatment, data=data.morocco)
#Pongamos atención al valor p
summary(dif_members)$coef[1:2,]
nobs(dif_members)
#Estadística por grupo de treatment
data.morocco %>%
group_by(treatment) %>%
summarize(mean=mean(members_resid_bl),
std=sd(members_resid_bl), n=n()) %>%
ungroup()
#Con una regresión:
dif_members <- lm(members_resid_bl ~ treatment, data=data.morocco)
#Pongamos atención al valor p
summary(dif_members)$coef[1:2,]
nobs(dif_members)
#CR0 implementa la corrección de sándwich para errores agrupados
coef_test(dif_members,
vcov = "CR0",
cluster = data.morocco$demi_paire)[1:2,]
#CR1s significa cluster robust 1 "Stata" :3
coef_test(dif_members,
vcov = "CR1S",
cluster = data.morocco$demi_paire)[1:2,]
#Errores CR1
coef_test(dif_members,
vcov = "CR1",
cluster = data.morocco$demi_paire)[1:2,]
##Pero hay selección, veamos un tabulado cruzado
data.morocco %>%
mutate(treatment=factor(treatment,
levels=c(0,1),
labels=c("Control", "Tratamiento"))) %>%
mutate(client=factor(client,
levels=c(0,1),
labels=c("No cliente", "Cliente"))) %>%
tabyl(treatment, client)
colnames(data.morocco)
data.morocco %>%
group_by(treatment) %>%
summarize(mean=mean(head_age_bl),
std=sd(head_age_bl), n=n()) %>%
ungroup()
#Con una regresión:
dreg <- lm(head_age_bl ~ treatment + factor(pair), data=data.morocco)
#Con una regresión:
dreg <- lm(head_age_bl ~ treatment + factor(paire), data=data.morocco)
#Pongamos atención al valor p
summary(dreg)$coef[1:2,]
nobs(dreg)
#CR0 implementa la corrección de sándwich para errores agrupados
coef_test(dreg,
vcov = "CR0",
cluster = data.morocco$demi_paire)[1:2,]
#Errores CR1S
coef_test(dreg,
vcov = "CR1s",
cluster = data.morocco$demi_paire)[1:2,]
#Errores CR1S
coef_test(dreg,
vcov = "CR1S",
cluster = data.morocco$demi_paire)[1:2,]
#CR0 implementa la corrección de sándwich para errores agrupados
coef_test(dreg,
vcov = "CR0",
cluster = data.morocco$demi_paire)[1:2,]
#Inorando la agrupación
coef_test(dreg,
vcov = "HC0")[1:2,]
?coef_test
?sandwich
#Ignorando la agrupación
coeftest(dreg, vcov = vcovHC(dreg, type="HC1"))
library(lmtest)
#Ignorando la agrupación
coeftest(dreg, vcov = vcovHC(dreg, type="HC1"))
#Ignorando la agrupación
coeftest(dreg, vcov = vcovHC(dreg, type="HC1"))[1:2,]
#CR0 implementa la corrección de sándwich para errores agrupados
coef_test(dreg,
vcov = "CR0",
cluster = data.morocco$demi_paire)[1:2,]
?vcovHC
?vcov
?vcovCR
#Coleccionamos con stargazer
stargazer(dreg, dreg, dreg,
type = "html",
se = list(sqrt(diag(vcovHC(dreg, type = "HC0"))),
sqrt(diag(vcovHC(dreg, type = "CR0"))),
sqrt(diag(vcovHC(dreg, type = "CR1S")))),
column.labels =c("HC0", "CR0", "CR1S"),
keep = c("treatment"))
#Coleccionamos con stargazer
stargazer(dreg, dreg, dreg,
type = "html",
se = list(sqrt(diag(vcovHC(dreg, type = "HC0"))),
sqrt(diag(vcovCR (dreg, type = "CR0"))),
sqrt(diag(vcovCR (dreg, type = "CR1S")))),
column.labels =c("HC0", "CR0", "CR1S"),
keep = c("treatment"))
#Coleccionamos con stargazer
stargazer(dreg, dreg, dreg,
type = "html",
se = list(sqrt(diag(vcovHC(dreg, type = "HC0"))),
sqrt(diag(vcovCR (dreg, type = "CR0", cluster= data.morocco$demi_paire))),
sqrt(diag(vcovCR (dreg, type = "CR1S", cluster= data.morocco$demi_paire)))),
column.labels =c("HC0", "CR0", "CR1S"),
keep = c("treatment"))
source("C:/Users/rojas/Dropbox/curso_EPS/eps-2022/content/laboratorios/lab_late_r.R", echo=TRUE)
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
library(janitor)
library(sandwich)
library(clubSandwich)
library(stargazer)
library(lmtest)
#Experimento con cumplimiento imperfecto ----
data.morocco<-read_csv("./content/laboratorios/crepon_morocco.csv",
locale = locale(encoding = "latin1"))   %>%
clean_names() %>%
filter(merge_indicator!=1)   # 2 y 3 incluyen la línea base
#Asignación: treatment
#Cumplimiento: client
#Estadística por grupo de treatment de head_age_bl
data.morocco %>%
group_by(treatment) %>%
summarize(mean=mean(head_age_bl),
std=sd(head_age_bl), n=n()) %>%
ungroup()
#Con una regresión:
dreg <- lm(head_age_bl ~ treatment + factor(paire), data=data.morocco)
#Pongamos atención al valor p
summary(dreg)$coef[1:2,]
nobs(dreg)
#Errores estándar agrupados----
#Ignorando la agrupación
coeftest(dreg, vcov = vcovHC(dreg, type="HC1"))[1:2,]
#CR0 implementa la corrección de sándwich para errores agrupados
coef_test(dreg,
vcov = "CR0",
cluster = data.morocco$demi_paire)[1:2,]
#Errores CR1S, que significan clustered roubst "Stata" :3
coef_test(dreg,
vcov = "CR1S",
cluster = data.morocco$demi_paire)[1:2,]
#Coleccionamos con stargazer
stargazer(dreg, dreg, dreg,
type = "text",
se = list(sqrt(diag(vcovHC(dreg, type = "HC0"))),
sqrt(diag(vcovCR (dreg, type = "CR0", cluster= data.morocco$demi_paire))),
sqrt(diag(vcovCR (dreg, type = "CR1S", cluster= data.morocco$demi_paire)))),
column.labels =c("HC0", "CR0", "CR1S"),
keep = c("treatment"))
#Coleccionamos con stargazer
stargazer(dreg, dreg, dreg,
type = "text",
se = list(sqrt(diag(vcovHC(dreg, type = "HC0"))),
sqrt(diag(vcovCR (dreg, type = "CR0", cluster= data.morocco$demi_paire))),
sqrt(diag(vcovCR (dreg, type = "CR1S", cluster= data.morocco$demi_paire)))),
column.labels =c("HC0", "CR0", "CR1S"),
se = FALSE,
p = TRUE,
keep = c("treatment"))
#Coleccionamos con stargazer
stargazer(dreg, dreg, dreg,
type = "text",
se = list(sqrt(diag(vcovHC(dreg, type = "HC0"))),
sqrt(diag(vcovCR (dreg, type = "CR0", cluster= data.morocco$demi_paire))),
sqrt(diag(vcovCR (dreg, type = "CR1S", cluster= data.morocco$demi_paire)))),
column.labels =c("HC0", "CR0", "CR1S"),
keep = c("treatment"))
#Coleccionamos con stargazer
stargazer(dreg, dreg, dreg,
type = "text",
se = list(sqrt(diag(vcovHC(dreg, type = "HC0"))),
sqrt(diag(vcovCR (dreg, type = "CR0", cluster= data.morocco$demi_paire))),
sqrt(diag(vcovCR (dreg, type = "CR1S", cluster= data.morocco$demi_paire)))),
column.labels =c("HC0", "CR0", "CR1S"),
p = TRUE,
keep = c("treatment"))
#Coleccionamos con stargazer
stargazer(dreg, dreg, dreg,
type = "text",
se = list(sqrt(diag(vcovHC(dreg, type = "HC0"))),
sqrt(diag(vcovCR (dreg, type = "CR0", cluster= data.morocco$demi_paire))),
sqrt(diag(vcovCR (dreg, type = "CR1S", cluster= data.morocco$demi_paire)))),
column.labels =c("HC0", "CR0", "CR1S"),
report=("vc*p"),
keep = c("treatment"))
xaringan::infinite_moon_reader()
options(digits=3)
sample
?sample
#Ciclos
#Si quiero hacer lo mismo, digamos 10 veces
reps=10
resultados <- data.frame(medias=matrix(ncol = 1, nrow = reps))
for (i in 1:reps)
{
data.b <- data.morocco[sample(nrow(data.morocco),
obs,
replace = TRUE), ]
#Guardamos en cada entrada la media estimada
resultados[i,1] <- mean(data.b$expense_total)
}
set.seed(927)
data.morocco <- read.csv("./crepon_morocco_analysis.csv") %>%
select(treatment, client, expense_total)
set.seed(927)
data.morocco <- read.csv("/.content/laboratorios/crepon_morocco_analysis.csv") %>%
select(treatment, client, expense_total)
data.morocco <- read.csv("./content/laboratorios/crepon_morocco_analysis.csv") %>%
select(treatment, client, expense_total)
data.morocco <- read.csv("./content/laboratorios/crepon_morocco_analysis.csv") %>%
select(treatment, client, expense_total)
set.seed(927)
data.morocco<-read_csv("./content/laboratorios/crepon_morocco.csv",
locale = locale(encoding = "latin1"))   %>%
obs <- nrow(data.morocco)
data.morocco<-read_csv("./content/laboratorios/crepon_morocco.csv",
locale = locale(encoding = "latin1"))   %>%
obs <- nrow(data.morocco)
set.seed(927)
data.morocco<-read_csv("./content/laboratorios/crepon_morocco.csv",
locale = locale(encoding = "latin1"))
obs <- nrow(data.morocco)
obs
#Veamos la media del gasto total
mean(data.morocco$expense_total)
#Veamos la media del gasto total
mean(data.morocco$expense_total, na.rm=T)
#Una muestra bootstrap
data.b <- data.morocco[sample(nrow(data.morocco),
obs,
replace = TRUE), ]
mean(data.b$expense_total, na.rm=T)
# Otra muestra bootstrap
data.b <- data.morocco[sample(nrow(data.morocco),
obs,
replace = TRUE), ]
mean(data.b$expense_total, na.rm=T)
#Ciclos
#Si quiero hacer lo mismo, digamos 10 veces
reps=10
resultados <- data.frame(medias=matrix(ncol = 1, nrow = reps))
for (i in 1:reps)
{
data.b <- data.morocco[sample(nrow(data.morocco),
obs,
replace = TRUE), ]
#Guardamos en cada entrada la media estimada
resultados[i,1] <- mean(mean(data.b$expense_total, na.rm=T))
}
View(resultados)
View(resultados)
#Ciclos
#Si quiero hacer lo mismo, digamos 10 veces
reps=10
resultados <- data.frame(medias=matrix(ncol = 1, nrow = reps))
for (i in 1:reps)
{
data.b <- data.morocco[sample(nrow(data.morocco),
obs,
replace = TRUE), ]
#Guardamos en cada entrada la media estimada
resultados[i,1] <- mean(data.b$expense_total, na.rm=T)
}
View(resultados)
View(resultados)
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
library(janitor)
library(sandwich)
library(clubSandwich)
library(stargazer)
library(lmtest)
#Experimento con cumplimiento imperfecto ----
data.morocco<-read_csv("./content/laboratorios/crepon_morocco.csv",
locale = locale(encoding = "latin1"))   %>%
clean_names() %>%
filter(merge_indicator!=1)   # 2 y 3 incluyen la línea base
#Asignación: treatment
#Cumplimiento: client
#Estadística por grupo de treatment de head_age_bl
data.morocco %>%
group_by(treatment) %>%
summarize(mean=mean(head_age_bl),
std=sd(head_age_bl), n=n()) %>%
ungroup()
#Con una regresión:
dreg <- lm(head_age_bl ~ treatment + factor(paire), data=data.morocco)
#Pongamos atención al valor p
summary(dreg)$coef[1:2,]
nobs(dreg)
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
library(janitor)
library(sandwich)
library(clubSandwich)
library(stargazer)
library(lmtest)
#Experimento con cumplimiento imperfecto ----
data.morocco<-read_csv("./content/laboratorios/crepon_morocco.csv",
locale = locale(encoding = "latin1"))   %>%
clean_names() %>%
filter(merge_indicator!=1)   # 2 y 3 incluyen la línea base
#Asignación: treatment
#Cumplimiento: client
#Estadística por grupo de treatment de head_age_bl
data.morocco %>%
group_by(treatment) %>%
summarize(mean=mean(head_age_bl),
std=sd(head_age_bl), n=n()) %>%
ungroup()
#Con una regresión:
dreg <- lm(head_age_bl ~ treatment + factor(paire), data=data.morocco)
#Pongamos atención al valor p
summary(dreg)$coef[1:2,]
nobs(dreg)
#Pongamos atención al valor p
print(summary(dreg)$coef[1:2,], digits=3)
#Pongamos atención al valor p
print(summary(dreg)$coef[1:2,], digits=3)
#Pongamos atención al valor p
summary(dreg)$coef[1:2,]
#Pongamos atención al valor p
round(summary(dreg)$coef[1:2,])
#Pongamos atención al valor p
round(summary(dreg)$coef[1:2,], 2)
#Pongamos atención al valor p
round(summary(dreg)$coef[1:2,], 4)
?round
#Pongamos atención al valor p
round(summary(dreg)$coef[1:2,], digits=4)
blogdown:::preview_site()
xaringan::infinite_moon_reader()
blogdown::build_site()
xaringan::infinite_moon_reader()
blogdown::build_site()
install.packages('tidy')
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown:::preview_site()
blogdown::build_site()
blogdown::serve_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
xaringan::infinite_moon_reader()
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
#Datos
data.pvalues<-read_csv("./data_benjamini_hochberg.csv",
locale = locale(encoding = "latin1"))
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
#Datos
data.pvalues<-read_csv(".laboratorios/data_benjamini_hochberg.csv",
locale = locale(encoding = "latin1"))
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
#Datos
data.pvalues<-read_csv("./laboratorios/data_benjamini_hochberg.csv",
locale = locale(encoding = "latin1"))
# Espacio de trabajo ----
rm(list = ls())
options(scipen=999) # Prevenir notación científica
library(tidyverse)
#Datos
data.pvalues<-read_csv("./content/laboratorios/data_benjamini_hochberg.csv",
locale = locale(encoding = "latin1"))
n <- 15
alpha <- 0.05
data.pvalues
View(data.pvalues)
View(data.pvalues)
p_al_menos_1error <- 1-(1-alpha)^m
m <- 1:100
p_al_menos_1error <- 1-(1-alpha)^m
plot(p_al_menos_1error)
knitr::opts_chunk$set(echo = FALSE, fig.path = "figures/")
library(tidyverse)
library(janitor)
library(sandwich)
#library(nnet)
#library(mlogit)
library(readr)
library(clubSandwich)
library(modelsummary)
library(estimatr)
xfun::pkg_load2(c('base64enc', 'htmltools', 'mime'))
alpha=0.05
n <- 1:1000
p <- 1-(1-alpha)^n
plot(p,n, xlab="n", ylab="1-(1-alpha)^n")
alpha=0.05
n <- 1:100
p <- 1-(1-alpha)^n
plot(p,n, xlab="n", ylab="1-(1-alpha)^n")
alpha <- 0.05
n <- 1:100
p <- 1-(1-alpha)^n
plot(p,n, xlab="n", ylab="1-(1-alpha)^n")
#Datos
data.pvalues<-read_csv("./content/laboratorios/data_benjamini_hochberg.csv",
locale = locale(encoding = "latin1"))
m <- 15
alpha <- 0.05
data.pvalues
#Bonferroni----
data.bonferroni <- data.pvalues %>%
mutate(bonferroni_alpha=alpha/m) %>%
mutate(bonferrini_rechazar=ifelse(poriginal<=bonferroni_alpha,1,0))
#Benjamini-Hochberg----
data.bh <- data.pvalues %>%
mutate(bh_alpha=alpha*hipotesis/m) %>%
mutate(bh_rechazar=ifelse(poriginal<=bh_alpha,1,0))
View(data.bh)
View(data.bh)
alpha <- 0.05
m <- 1:100
p <- 1-(1-alpha)^m
plot(p,m, xlab="n", ylab="1-(1-alpha)^m")
alpha <- 0.05
m <- 1:100
p <- 1-(1-alpha)^m
plot(p,m, xlab="n", ylab="1-(1-alpha)^m")
alpha <- 0.05
m <- 1:100
p <- 1-(1-alpha)^m
plot(p,m, xlab="n", ylab="1-(1-alpha)^m")
alpha <- 0.05
m <- 1:100
p <- 1-(1-alpha)^m
plot(m,p, xlab="n", ylab="1-(1-alpha)^m")
xaringan::infinite_moon_reader()
?vcov
?vcovCR
